name: you-book

services:
  app:
    build:
      context: .
      args:
        APP_PORT: ${APP_PORT}
    command: >
      sh -c "python manage.py runserver 0.0.0.0:${APP_PORT}"
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - ./src:/app
    environment:
      DATABASE_NAME: ${POSTGRES_DATABASE}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_HOST: ${POSTGRES_HOST}
      DATABASE_PORT: ${POSTGRES_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - you-book-network

  postgres-admin:
    image: dpage/pgadmin4:8.9
    restart: always
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pg-admin-data:/var/lib/pgadmin
    depends_on:
        postgres:
          condition: service_healthy
    networks:
      - you-book-network

  postgres:
    image: postgres:16.3-alpine3.20
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - pg-data:/var/lib/postgres/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DATABASE} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - you-book-network

volumes:
  pg-data:
  pg-admin-data:

networks:
  you-book-network:
